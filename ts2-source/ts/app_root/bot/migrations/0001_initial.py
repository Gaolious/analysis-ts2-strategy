# Generated by Django 4.1.4 on 2023-01-15 05:46

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('content_category', models.IntegerField(choices=[(1, '기본'), (2, '이벤트'), (3, '유니언')], default=0, verbose_name='content category')),
                ('level_req', models.IntegerField(default=0, verbose_name='level required')),
                ('level_from', models.IntegerField(default=0, verbose_name='level from')),
                ('type', models.IntegerField(default=0, verbose_name='type')),
                ('event', models.IntegerField(default=0, verbose_name='event')),
                ('sprite', models.CharField(max_length=255, null=True, verbose_name='sprite id')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
            },
        ),
        migrations.CreateModel(
            name='Definition',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('version', models.CharField(max_length=20, verbose_name='version')),
                ('checksum', models.CharField(max_length=50, verbose_name='checksum')),
                ('url', models.URLField(verbose_name='download url')),
                ('download_path', models.CharField(max_length=200, verbose_name='checksum')),
            ],
            options={
                'verbose_name': 'Definition',
                'verbose_name_plural': 'Definitions',
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('sprite', models.CharField(max_length=255, null=True, verbose_name='sprite id')),
                ('time', models.IntegerField(default=0, verbose_name='time')),
                ('travel_duration', models.IntegerField(default=0, verbose_name='travel_duration')),
                ('multiplier', models.IntegerField(default=0, verbose_name='multiplier')),
                ('refresh_time', models.IntegerField(default=0, verbose_name='refresh_time')),
                ('train_limit', models.IntegerField(default=0, verbose_name='train_limit')),
                ('capacity', models.IntegerField(default=0, verbose_name='capacity')),
                ('requirements', models.CharField(max_length=255, verbose_name='requirements')),
                ('article', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.article')),
            ],
            options={
                'verbose_name': 'Destination',
                'verbose_name_plural': 'Destinations',
            },
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('content_category', models.IntegerField(choices=[(1, '기본'), (2, '이벤트'), (3, '유니언')], default=0, verbose_name='content category')),
                ('level_req', models.IntegerField(default=0, verbose_name='level required')),
                ('level_from', models.IntegerField(default=0, verbose_name='level from')),
                ('starting_slot_count', models.IntegerField(default=0, verbose_name='starting_slot_count')),
                ('max_slot_count', models.IntegerField(default=0, verbose_name='max_slot_count')),
                ('type', models.IntegerField(default=0, verbose_name='type')),
                ('asset_name', models.CharField(max_length=255, verbose_name='asset_name')),
                ('sprite', models.CharField(max_length=255, verbose_name='sprite id')),
            ],
            options={
                'verbose_name': 'Factory',
                'verbose_name_plural': 'Factories',
            },
        ),
        migrations.CreateModel(
            name='JobLocation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('local_key', models.CharField(default='', max_length=255, verbose_name='local key')),
                ('name_local_key', models.CharField(default='', max_length=255, null=True, verbose_name='local key')),
                ('contractor_id', models.IntegerField(default=0, verbose_name='Contractor ID')),
            ],
            options={
                'verbose_name': 'Job Location',
                'verbose_name_plural': 'Job Locations',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('region', models.IntegerField(default=0, verbose_name='region')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='PlayerFactory',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('slot_count', models.IntegerField(verbose_name='slot count')),
                ('factory', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.factory')),
            ],
            options={
                'verbose_name': 'Player Factory',
                'verbose_name_plural': 'Player Factories',
            },
        ),
        migrations.CreateModel(
            name='PlayerJob',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('job_id', models.CharField(max_length=100, verbose_name='job id')),
                ('job_level', models.IntegerField(default=0, verbose_name='CraftTime')),
                ('sequence', models.IntegerField(default=0, null=True, verbose_name='Sequence')),
                ('job_type', models.IntegerField(default=0, verbose_name='JobType')),
                ('duration', models.IntegerField(default=0, verbose_name='Duration')),
                ('condition_multiplier', models.IntegerField(default=0, verbose_name='ConditionMultiplier')),
                ('reward_multiplier', models.IntegerField(default=0, verbose_name='RewardMultiplier')),
                ('required_amount', models.IntegerField(default=0, verbose_name='required_amount')),
                ('current_article_amount', models.IntegerField(default=0, verbose_name='CurrentArticleAmount')),
                ('reward', models.CharField(default='', max_length=255, verbose_name='reward')),
                ('bonus', models.CharField(default='', max_length=255, verbose_name='bonus')),
                ('expires_at', models.DateTimeField(default=None, null=True, verbose_name='ExpiresAt')),
                ('requirements', models.CharField(default='', max_length=255, verbose_name='reward')),
                ('unlock_at', models.DateTimeField(default=None, null=True, verbose_name='UnlocksAt')),
                ('collectable_from', models.DateTimeField(default=None, null=True, verbose_name='CollectableFrom')),
                ('completed_at', models.DateTimeField(default=None, null=True, verbose_name='CompletedAt')),
                ('job_location', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.joblocation')),
                ('required_article', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.article')),
            ],
            options={
                'verbose_name': 'Player Job',
                'verbose_name_plural': 'Player Jobs',
            },
        ),
        migrations.CreateModel(
            name='PlayerLeaderBoard',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('leader_board_id', models.CharField(default='', max_length=50, verbose_name='LeaderboardId')),
                ('leader_board_group_id', models.CharField(default='', max_length=50, verbose_name='LeaderboardGroupId')),
                ('player_job', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.playerjob')),
            ],
            options={
                'verbose_name': 'Player Leader Board',
                'verbose_name_plural': 'Player Leader Boards',
            },
        ),
        migrations.CreateModel(
            name='PlayerWhistle',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('category', models.IntegerField(default=0, verbose_name='category')),
                ('position', models.IntegerField(default=0, verbose_name='position')),
                ('spawn_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='SpawnTime')),
                ('collectable_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='CollectableFrom')),
                ('is_for_video_reward', models.BooleanField(blank=True, default=None, null=True, verbose_name='IsForVideoReward')),
                ('expires_at', models.DateTimeField(blank=True, default=None, null=True, verbose_name='ExpiresAt')),
            ],
            options={
                'verbose_name': 'Player Whistle',
                'verbose_name_plural': 'Player Whistles',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('content_category', models.IntegerField(choices=[(1, '기본'), (2, '이벤트'), (3, '유니언')], default=0, verbose_name='content category')),
                ('level_from', models.IntegerField(default=0, verbose_name='level from')),
                ('asset_name', models.CharField(max_length=255, verbose_name='sprite id')),
                ('gold_amount_coefficient', models.IntegerField(default=0, verbose_name='gold_amount_coefficient')),
                ('train_upgrade_price_coefficient', models.DecimalField(blank=True, decimal_places=10, default=Decimal('0.0'), max_digits=30, verbose_name='train_upgrade_price_coefficient')),
                ('city_currency_coefficient', models.IntegerField(default=0, verbose_name='city_currency_coefficient')),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
            },
        ),
        migrations.CreateModel(
            name='Train',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('content_category', models.IntegerField(choices=[(1, '기본'), (2, '이벤트'), (3, '유니언')], default=0, verbose_name='content category')),
                ('rarity', models.IntegerField(choices=[(1, '일반'), (2, '레어'), (3, '에픽'), (4, '전설')], default=0, verbose_name='rarity')),
                ('era', models.IntegerField(choices=[(1, '스팀'), (2, '디젤'), (3, '전기')], default=0, verbose_name='era')),
                ('reward', models.BooleanField(default=False, verbose_name='reward')),
                ('region', models.IntegerField(default=0, verbose_name='region')),
                ('max_level', models.IntegerField(default=0, verbose_name='max_level')),
                ('asset_name', models.CharField(max_length=255, verbose_name='asset_name')),
            ],
            options={
                'verbose_name': 'Train',
                'verbose_name_plural': 'Trains',
            },
        ),
        migrations.CreateModel(
            name='TrainLevel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('train_level', models.IntegerField(default=0, verbose_name='train_level')),
                ('power', models.CharField(max_length=255, verbose_name='power')),
            ],
            options={
                'verbose_name': 'Train Level',
                'verbose_name_plural': 'Train Levels',
            },
        ),
        migrations.CreateModel(
            name='UserLevel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('xp', models.IntegerField(default=0, verbose_name='XP')),
                ('rewards', models.CharField(default='', max_length=255, verbose_name='rewards')),
            ],
            options={
                'verbose_name': 'User Level',
                'verbose_name_plural': 'User Levels',
            },
        ),
        migrations.CreateModel(
            name='WarehouseLevel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('capacity', models.IntegerField(default=0, verbose_name='capacity')),
                ('upgrade_article_ids', models.CharField(default='', max_length=255, verbose_name='upgrade_article_ids')),
                ('upgrade_article_amounts', models.CharField(default='', max_length=255, verbose_name='upgrade_article_amounts')),
            ],
            options={
                'verbose_name': 'Warehouse Level',
                'verbose_name_plural': 'Warehouse Levels',
            },
        ),
        migrations.CreateModel(
            name='RunVersion',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('task_status', models.PositiveSmallIntegerField(choices=[(10, 'in queued'), (20, 'in processing'), (30, 'error'), (40, 'completed')], default=10, verbose_name='status of crawling task')),
                ('queued_datetime', models.DateTimeField(blank=True, default=None, null=True, verbose_name='queued datetime')),
                ('processing_datetime', models.DateTimeField(blank=True, default=None, null=True, verbose_name='processing datetime')),
                ('error_datetime', models.DateTimeField(blank=True, default=None, null=True, verbose_name='error datetime')),
                ('completed_datetime', models.DateTimeField(blank=True, default=None, null=True, verbose_name='completed datetime')),
                ('player_id', models.CharField(max_length=50, verbose_name='PlayerId')),
                ('player_name', models.CharField(max_length=50, verbose_name='PlayerName')),
                ('xp', models.IntegerField(default=0, verbose_name='xp')),
                ('gem', models.IntegerField(default=0, verbose_name='gem')),
                ('gold', models.IntegerField(default=0, verbose_name='gold')),
                ('key', models.IntegerField(default=0, verbose_name='key')),
                ('level', models.IntegerField(default=0, verbose_name='level')),
                ('population', models.IntegerField(default=0, verbose_name='population')),
                ('warehouse', models.IntegerField(default=0, verbose_name='warehouse')),
                ('warehouse_level', models.IntegerField(default=0, verbose_name='warehouse_level')),
                ('train_parts_common', models.IntegerField(default=0, verbose_name='train_common')),
                ('train_parts_rare', models.IntegerField(default=0, verbose_name='train_rare')),
                ('train_parts_epic', models.IntegerField(default=0, verbose_name='train_epic')),
                ('train_parts_legendary', models.IntegerField(default=0, verbose_name='train_legendary')),
                ('blue_city_plans', models.IntegerField(default=0, verbose_name='blue_city_plans')),
                ('yellow_city_plans', models.IntegerField(default=0, verbose_name='yellow_city_plans')),
                ('red_city_plans', models.IntegerField(default=0, verbose_name='red_city_plans')),
                ('dispatchers', models.IntegerField(default=0, verbose_name='dispatchers')),
                ('guild_dispatchers', models.IntegerField(default=0, verbose_name='guild_dispatchers')),
                ('next_event_datetime', models.DateTimeField(default=None, null=True, verbose_name='next event datetime')),
                ('init_data_request_datetime', models.DateTimeField(default=None, null=True, verbose_name='init_data_request_datetime')),
                ('init_data_response_datetime', models.DateTimeField(default=None, null=True, verbose_name='init_data_response_datetime')),
                ('init_data_server_datetime', models.DateTimeField(default=None, null=True, verbose_name='init_data_server_datetime')),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Version',
                'verbose_name_plural': 'Versions',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('article_amount', models.IntegerField(default=0, verbose_name='article_amount')),
                ('craft_time', models.IntegerField(default=0, verbose_name='craft_time')),
                ('article_ids', models.CharField(max_length=255, verbose_name='article_ids')),
                ('article_amounts', models.CharField(max_length=255, verbose_name='article_amounts')),
                ('level_req', models.IntegerField(default=0, verbose_name='level required')),
                ('level_from', models.IntegerField(default=0, verbose_name='level from')),
                ('article', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.article')),
                ('factory', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.factory')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='PlayerWhistleItem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('value', models.IntegerField(default=0, verbose_name='value')),
                ('amount', models.IntegerField(default=0, verbose_name='amount')),
                ('article', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.article')),
                ('player_whistle', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.playerwhistle')),
                ('version', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion')),
            ],
            options={
                'verbose_name': 'Player Whistle Item',
                'verbose_name_plural': 'Player Whistle Items',
            },
        ),
        migrations.AddField(
            model_name='playerwhistle',
            name='version',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion'),
        ),
        migrations.CreateModel(
            name='PlayerWarehouse',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('amount', models.IntegerField(default=0, verbose_name='amount')),
                ('article', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.article')),
                ('version', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion')),
            ],
            options={
                'verbose_name': 'Player Warehouse',
                'verbose_name_plural': 'Player Warehouses',
            },
        ),
        migrations.CreateModel(
            name='PlayerTrain',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('instance_id', models.IntegerField(default=0, verbose_name='instance_id')),
                ('level', models.IntegerField(default=0, verbose_name='level')),
                ('region', models.IntegerField(blank=True, default=None, null=True, verbose_name='region')),
                ('has_route', models.BooleanField(blank=True, default=False, verbose_name='has route')),
                ('route_type', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='route_type')),
                ('route_definition_id', models.IntegerField(blank=True, default=None, null=True, verbose_name='route_definition_id')),
                ('route_departure_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='route_departure_time')),
                ('route_arrival_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='route_arrival_time')),
                ('has_load', models.BooleanField(blank=True, default=False, verbose_name='has load')),
                ('load_amount', models.IntegerField(default=0, verbose_name='load amount')),
                ('load', models.ForeignKey(db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.article')),
                ('train', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.train')),
                ('version', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion')),
            ],
            options={
                'verbose_name': 'Player Train',
                'verbose_name_plural': 'Player Trains',
            },
        ),
        migrations.CreateModel(
            name='PlayerLeaderBoardProgress',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('player_id', models.IntegerField(default=0, verbose_name='PlayerId')),
                ('avata_id', models.IntegerField(default=0, verbose_name='AvatarId')),
                ('firebase_uid', models.CharField(default='', max_length=50, verbose_name='FirebaseUid')),
                ('player_name', models.CharField(default='', max_length=50, verbose_name='player_name')),
                ('progress', models.IntegerField(default=0, verbose_name='progress')),
                ('position', models.IntegerField(default=0, verbose_name='position')),
                ('last_updated_at', models.DateTimeField(default=0, verbose_name='LastUpdatedAt')),
                ('reward_claimed', models.BooleanField(default=False, verbose_name='RewardClaimed')),
                ('rewards', models.CharField(default='', max_length=255, verbose_name='rewards')),
                ('leader_board', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.playerleaderboard')),
                ('version', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion')),
            ],
            options={
                'verbose_name': 'Player Leader Board Progress',
                'verbose_name_plural': 'Player Leader Board Progresses',
            },
        ),
        migrations.AddField(
            model_name='playerleaderboard',
            name='version',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion'),
        ),
        migrations.AddField(
            model_name='playerjob',
            name='version',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion'),
        ),
        migrations.CreateModel(
            name='PlayerGift',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('job_id', models.CharField(max_length=100, verbose_name='job id')),
                ('reward', models.CharField(default='', max_length=255, verbose_name='reward')),
                ('gift_type', models.IntegerField(default=0, verbose_name='gift_type')),
                ('version', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion')),
            ],
            options={
                'verbose_name': 'Player Gift',
                'verbose_name_plural': 'Player Gifts',
            },
        ),
        migrations.CreateModel(
            name='PlayerFactoryProductOrder',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('index', models.IntegerField(default=0, verbose_name='index')),
                ('amount', models.IntegerField(default=0, verbose_name='amount')),
                ('craft_time', models.IntegerField(default=0, verbose_name='CraftTime')),
                ('finish_time', models.DateTimeField(default=None, null=True, verbose_name='FinishTime')),
                ('finishes_at', models.DateTimeField(default=None, null=True, verbose_name='FinishesAt')),
                ('article', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.article')),
                ('player_factory', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.playerfactory')),
                ('version', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion')),
            ],
            options={
                'verbose_name': 'Player Factory Product Order',
                'verbose_name_plural': 'Player Factory Product Orders',
            },
        ),
        migrations.AddField(
            model_name='playerfactory',
            name='version',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion'),
        ),
        migrations.CreateModel(
            name='PlayerDestination',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('train_limit_count', models.IntegerField(null=True, verbose_name='train_limit_count')),
                ('train_limit_refresh_time', models.DateTimeField(null=True, verbose_name='train_limit_refresh_time')),
                ('train_limit_refresh_at', models.DateTimeField(null=True, verbose_name='train_limit_refresh_at')),
                ('multiplier', models.IntegerField(default='', null=True, verbose_name='multiplier')),
                ('definition', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.destination')),
                ('location', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.location')),
                ('version', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion')),
            ],
            options={
                'verbose_name': 'Building',
                'verbose_name_plural': 'Buildings',
            },
        ),
        migrations.CreateModel(
            name='PlayerContractList',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('contract_list_id', models.IntegerField(default=0, verbose_name='contract list id')),
                ('available_to', models.DateTimeField(default=None, null=True, verbose_name='AvailableTo')),
                ('next_replace_at', models.DateTimeField(default=None, null=True, verbose_name='AvailableTo')),
                ('next_video_replace_at', models.DateTimeField(default=None, null=True, verbose_name='AvailableTo')),
                ('next_video_rent_at', models.DateTimeField(default=None, null=True, verbose_name='AvailableTo')),
                ('next_video_speed_up_at', models.DateTimeField(default=None, null=True, verbose_name='AvailableTo')),
                ('expires_at', models.DateTimeField(default=None, null=True, verbose_name='AvailableTo')),
                ('version', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion')),
            ],
            options={
                'verbose_name': 'Player Contract List',
                'verbose_name_plural': 'Player Contract Lists',
            },
        ),
        migrations.CreateModel(
            name='PlayerContract',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('slot', models.IntegerField(default=0, verbose_name='slot')),
                ('conditions', models.CharField(default='', max_length=255, verbose_name='conditions')),
                ('reward', models.CharField(default='', max_length=255, verbose_name='reward')),
                ('usable_from', models.DateTimeField(default=None, null=True, verbose_name='UsableFrom')),
                ('available_from', models.DateTimeField(default=None, null=True, verbose_name='AvailableFrom')),
                ('available_to', models.DateTimeField(default=None, null=True, verbose_name='AvailableTo')),
                ('expires_at', models.DateTimeField(default=None, null=True, verbose_name='AvailableTo')),
                ('contract_list', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.playercontractlist')),
                ('version', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion')),
            ],
            options={
                'verbose_name': 'Player Contract',
                'verbose_name_plural': 'Player Contracts',
            },
        ),
        migrations.CreateModel(
            name='PlayerBuilding',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('instance_id', models.IntegerField(null=True, verbose_name='instance id')),
                ('definition_id', models.IntegerField(null=True, verbose_name='instance id')),
                ('rotation', models.IntegerField(null=True, verbose_name='instance id')),
                ('level', models.IntegerField(null=True, verbose_name='instance id')),
                ('upgrade_task', models.CharField(default='', max_length=255, null=True, verbose_name='upgrade task')),
                ('parcel_number', models.IntegerField(default=None, null=True, verbose_name='parcel_number')),
                ('version', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.runversion')),
            ],
            options={
                'verbose_name': 'Building',
                'verbose_name_plural': 'Buildings',
            },
        ),
        migrations.AddField(
            model_name='joblocation',
            name='location',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.location'),
        ),
        migrations.AddField(
            model_name='joblocation',
            name='region',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.region'),
        ),
        migrations.AddField(
            model_name='destination',
            name='location',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.location'),
        ),
        migrations.AddField(
            model_name='destination',
            name='region',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bot.region'),
        ),
    ]
